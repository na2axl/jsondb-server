/**
 * JSONDB - JSON Database Manager
 *
 * Manage JSON files as databases with JSONDB Query Language (JQL)
 *
 * This content is released under the GPL License (GPL-3.0)
 *
 * Copyright (c) 2016, Centers Technologies
 *
 * @package	   JSONDB
 * @author	   Nana Axel
 * @copyright  Copyright (c) 2016, Centers Technologies
 * @license	   http://spdx.org/licenses/GPL-3.0 GPL License
 * @filesource
 */

/**
 * Main Server Logic
 *
 * @package		JSONDB
 * @author		Nana Axel
 */

var WebSocketServer = require('ws').Server;

var jdb = {
    configuration: require('jdb-configuration'),
    benchmark: require('jdb-benchmark'),
    queryParser: require('jdb-queryparser'),
    util: require('jdb-util')
};

var processRequest = function (req, res) {
    res.writeHead(200);
    res.end('Welcome to JSONDB Server Web Admin!\n');
};

var util = require('util');
var app  = require('http').createServer(processRequest);

module.exports = function (opt, cb) {
    var server, username, password, database;
    var wss = new WebSocketServer({ server: app, verifyClient: function(o, cb) {
        var server_name = o.req.headers['jdb-server-name'];
        var server_list = jdb.configuration.getConfig('users');
        if (server_list.hasOwnProperty(server_name)) {
            var v_cred = new Buffer(server_list[server_name].username + ':' + server_list[server_name].password).toString('base64');
            var u_cred = o.req.headers.authorization.replace('Basic ', '');
            if (v_cred === u_cred) {
                server = server_name;
                username = server_list[server_name].username;
                password = server_list[server_name].password;
                database = o.req.headers['jdb-database-name'];
                cb(true);
            }
            else {
                cb(false);
            }
        }
        else {
            cb(false);
        }
    }});
    app.listen(opt.port);
    wss.on('connection', function (ws) {
        ws.on('message', function (message) {
            var JSONDB = require('jdb-jsondb'), _j, _d;
            _j = new JSONDB();
            _d = _j.connect(server, username, password, database);
            try {
                ws.send(JSON.stringify({
                    _jdb_error: false,
                    _error_msg: null,
                    _query_result: _d.query(message)
                }));
            }
            catch (e) {
                ws.send(JSON.stringify({
                    _jdb_error: true,
                    _error_msg: e.message + 'fghfgh',
                    _query_result: null
                }));
            }
            ws.close();
        });
    });

    cb();
};
